/*!
 *  Bayrell Core Library
 *
 *  (c) Copyright 2018-2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
namespace Core.Components.Tree;

use Runtime.CoreStruct;
use Core.Components.Dialog.DialogModel;
use Core.Components.ContextMenu.ContextMenuModel;
use Core.Components.Tree.TreeItem;


struct TreeModel extends TreeItem
{
	const string DIALOG_CREATE_FILE = "dialog_create_file";
	const string DIALOG_CREATE_FOLDER = "dialog_create_folder";
	const string DIALOG_RENAME_ITEM = "dialog_rename_item";
	const string DIALOG_DELETE_ITEM = "dialog_delete_item";
	const string DIALOG_RELOAD_ITEM = "dialog_reload_item";
	
	public bool is_open = true;
	public string selected = "";
	public DialogModel dialog = new DialogModel();
	public ContextMenuModel contextmenu = new ContextMenuModel();
	public Collection<TreeItem> items = null;
	
	
	
	/**
	 * Split path
	 */
	lambda Collection<int> splitPath(string path)
	{
		Collection<string> path = rs::explode(".", path);
		return path.map( method rtl::toInt );
	}
	
	
	
	/**
	 * Select item
	 * @param TreeModel model
	 * @param string path
	 * @return TreeModel
	 */
	public TreeModel selectItem(string path)
	{
		TreeModel model = this;
		model <= selected <= path;
		return model;
	}
	
	
	
	/**
	 * Show navigator context menu
	 * @param TreeModel model
	 * @return TreeItem
	 */
	public TreeItem getSelectedItem()
	{
		TreeModel model = this;
		Collection<int> path = self::splitPath( model.selected );
		TreeItem item = model.getTreeItem( path );
		return item;
	}
	
	
}